{"version":3,"sources":["Field.js","Template.js","App.js","reportWebVitals.js","index.js"],"names":["Field","label","value","onChange","className","e","target","Template","noun","noun2","adjective","color","type","onSubmit","preventDefault","App","useState","textOfNoun","setTextOfNoun","textOfNoun2","setTextOfNoun2","textOfAdjective","setTextOfAdjective","textOfColor","setTextOfColor","answers","setAnswers","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAeeA,MAbf,YAA4C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,gCACE,gCAAQF,IACR,uBACEG,UAAU,QACVF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,cCiB1BK,MAxBf,YAAsD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAS1C,OACE,8BACE,iCACE,+BACG,IADH,eAEeA,EAFf,IAEuBH,EAFvB,gBAE0CE,EAF1C,IAEsDD,EAAO,OAE7D,wBAAQG,KAAK,SAASC,SAfb,SAACR,GACdA,EAAES,iBACFN,EAAO,GACPC,EAAQ,GACRC,EAAY,GACZC,EAAQ,IAUJ,2BCbO,SAASI,EAAT,GAAgD,EAAjCP,KAAiC,EAA3BC,MAA2B,EAApBC,UAAoB,EAATC,MAAU,IAAD,EACzBK,mBAAS,IADgB,mBACtDC,EADsD,KAC1CC,EAD0C,OAEvBF,mBAAS,IAFc,mBAEtDG,EAFsD,KAEzCC,EAFyC,OAGfJ,mBAAS,IAHM,mBAGtDK,EAHsD,KAGrCC,EAHqC,OAIvBN,mBAAS,IAJc,mBAItDO,EAJsD,KAIzCC,EAJyC,OAK/BR,mBAAS,CAAC,GAAI,GAAI,GAAI,KALS,mBAKtDS,EALsD,KAK7CC,EAL6C,KAc7D,OAEAD,EAAQ,GAAGE,OAAOF,EAAQ,GAAGE,OAAOF,EAAQ,GAAGE,OAAOF,EAAQ,GAAGE,SAAW,EAExE,gCACA,0CACA,uBAAMd,SAbS,SAACR,GACtBA,EAAES,iBACFY,EAAW,CAACT,EAAYE,EAAaE,EAAiBE,KAWhD,UACE,cAAC,EAAD,CACAtB,MAAM,OACNE,SAAUe,EACVhB,MAAOe,IACP,uBACA,cAAC,EAAD,CACAhB,MAAM,QACNE,SAAUiB,EACVlB,MAAOiB,IACP,uBACA,cAAC,EAAD,CACAlB,MAAM,YACNE,SAAUmB,EACVpB,MAAOmB,IAEP,uBACA,cAAC,EAAD,CACApB,MAAM,QACNE,SAAUqB,EACVtB,MAAOqB,IACP,uBACA,wBAAQX,KAAK,SAAb,+BAMF,gCACA,0CACA,cAAC,EAAD,CACAJ,KAAOiB,EAAQ,GACfhB,MAAQgB,EAAQ,GAChBf,UAAYe,EAAQ,GACpBd,MAAQc,EAAQ,QC3DtB,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb9ec8a8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Field({ label, value, onChange }) {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\n\nfunction Template({ noun, noun2, adjective, color }) {\n  const submit = (e) => {\n    e.preventDefault();\n    noun = \"\";\n    noun2 = \"\";\n    adjective = \"\";\n    color = \"\";\n  };\n\n  return (\n    <div>\n      <form>\n        <h1>\n          {\" \"}\n          There was a {color} {noun} who loved a {adjective} {noun2}{\" \"}\n        </h1>\n        <button type=\"submit\" onSubmit={submit}>\n          Restart\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Template;","import './App.css';\nimport React, { useState } from \"react\";\nimport Field from \"./Field\";\nimport Template from \"./Template\";\n\nexport default function App({ noun, noun2, adjective, color }) {\n  const [textOfNoun, setTextOfNoun] = useState(\"\");\n  const [textOfNoun2, setTextOfNoun2] = useState(\"\");\n  const [textOfAdjective, setTextOfAdjective] = useState(\"\");\n  const [textOfColor, setTextOfColor] = useState(\"\");\n  const [answers, setAnswers] = useState(['', '', '', '']);\n\nconst handleSubmit = (e) => {\ne.preventDefault();\nsetAnswers([textOfNoun, textOfNoun2, textOfAdjective, textOfColor]);\n}\n\n  \n\n  return (\n\n (answers[0].length*answers[1].length*answers[2].length*answers[3].length === 0)  ?\n\n      <div>\n      <h1> Madlibs</h1>\n      <form onSubmit = {handleSubmit}>\n        <Field \n        label=\"noun\" \n        onChange={setTextOfNoun} \n        value={textOfNoun} />\n        <hr />\n        <Field \n        label=\"noun2\" \n        onChange={setTextOfNoun2} \n        value={textOfNoun2} />\n        <hr />\n        <Field\n        label=\"adjective\"\n        onChange={setTextOfAdjective}\n        value={textOfAdjective}\n        />\n        <hr />\n        <Field \n        label=\"color\" \n        onChange={setTextOfColor} \n        value={textOfColor} />\n        <hr /> \n        <button type=\"submit\"> Click Me! </button>\n      </form>\n     </div>\n      \n      :\n      \n      <div>\n      <h1> Madlibs</h1>\n      <Template\n      noun= {answers[0]}\n      noun2= {answers[1]}\n      adjective= {answers[2]}\n      color= {answers[3]}\n      />\n      </div> \n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}